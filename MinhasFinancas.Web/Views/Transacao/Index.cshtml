@model IEnumerable<MinhasFinancas.Web.ViewModels.TransacaoViewModel>

@{
    ViewBag.Title = "Transações";
}
@{
    var listItemsPapel = new[] {
        new { value = 0, text = "Selecione..." },
        new { value = Convert.ToInt32(MinhasFinancas.Infra.TipoPapel.Acao), text = MinhasFinancas.Infra.TipoPapel.Acao.ToString() },
        new { value = Convert.ToInt32(MinhasFinancas.Infra.TipoPapel.Fii), text = MinhasFinancas.Infra.TipoPapel.Fii.ToString() },
        new { value = Convert.ToInt32(MinhasFinancas.Infra.TipoPapel.BDR), text = MinhasFinancas.Infra.TipoPapel.BDR.ToString() },
        new { value = Convert.ToInt32(MinhasFinancas.Infra.TipoPapel.ETF), text = MinhasFinancas.Infra.TipoPapel.ETF.ToString() }
    };
    var listItemsTran = new[] {
        new { value = 0, text = "Selecione..." },
        new { value = Convert.ToInt32(MinhasFinancas.Infra.TipoTransacao.Compra), text = MinhasFinancas.Infra.TipoTransacao.Compra.ToString() },
        new { value = Convert.ToInt32(MinhasFinancas.Infra.TipoTransacao.Venda), text = MinhasFinancas.Infra.TipoTransacao.Venda.ToString() }
    };
}

<style>
    .btnTbl {
        padding: 0;
    }

    #tbodyTransacao {
        font-size: 10pt;
    }

    .nomeCSS {
        font-size: 9pt;
    }

    .form-control {
        display: inline;
    }
</style>

<h2>Transações</h2>

<p>
    @Html.ActionLink("Nova Transação", "Create", new { area = "" }, new { @class = "btn btn-success" })
</p>

<div class="row">
    <div class="col-md-12">
        <input type="hidden" id="hdDtI" value="0" />
        <input type="hidden" id="hdDtF" value="0" />
        @using (Html.BeginForm("Index", "Transacao", FormMethod.Post))
        {
            <div class="row">
                <div class="col-md-4">
                    Tipo Transacao:
                    @Html.DropDownList("cbbTipoTrasacao", new SelectList(listItemsTran, "Value", "Text"), new { @class = "form-control" })
                </div>
                <div class="col-md-4">
                    Tipo papel:
                    @Html.DropDownList("cbbTipoPapel", new SelectList(listItemsPapel, "Value", "Text"), new { @class = "form-control" })
                </div>
                <div class="col-md-4">
                    Filtro:
                    <input type="text" id="filtroInput" class="form-control" placeholder="Filtrar tabela">
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    Início:
                    <input type="date" id="dtInicio" name="dtInicio" min="2018-06-07" class="form-control" />
                    <div class="btn btn-outline-info" title="Colocar início do mês" onclick="ColocarInicioMes()"><</div>
                </div>
                <div class="col-md-4">
                    Fim:
                    <input type="date" id="dtFim" name="dtFim" class="form-control" />
                    <div class="btn btn-outline-info" title="Colocar início do mês" onclick="ColocarFinalMes()">></div>
                </div>
                <div class="col-md-1">
                    <input type="submit" value="Filtrar" class="btn btn-success" />
                </div>
            </div>
            <br />
        }
    </div>
</div>

<p>
    Saldo total: <span id="lblTotalCompra"></span>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PapelId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ValorUnt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantidade)
            </th>
            <th>
                Total
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Data)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TipoTransacao)
            </th>
            <th style="width:7%;">
                @Html.DisplayNameFor(model => model.Descricao)
            </th>
            <th scope="col" style="width:7%;"></th>
        </tr>
    </thead>
    <tbody id="tbodyTransacao">

        @foreach (var item in Model)
        {
            <tr>
                <td class="nomeCSS">
                    @Html.DisplayFor(modelItem => item.Papel.Codigo) - @Html.DisplayFor(modelItem => item.Papel.Nome)
                </td>
                <td>
                    @item.ValorUnt.ToString("C")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantidade)
                </td>
                <td>
                    @{var total = item.Quantidade * item.ValorUnt;}
                    @total.ToString("C")
                </td>
                <td>
                    @item.Data.ToString("dd/MM/yyyy")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TipoTransacao)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Descricao)
                </td>
                <td>
                    @Html.ActionLink("E", "Edit", new { id = item.Id }, new { @class = "btn btn-primary btnTbl" }) |
                    @Html.ActionLink("Inf", "Details", new { id = item.Id }, new { @class = "btn btn-info btnTbl" }) |
                    @Html.ActionLink("D", "Delete", new { id = item.Id }, new { @class = "btn btn-danger btnTbl" })
                </td>
            </tr>
        }
    </tbody>
</table>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>
    $(document).ready(function () {
        $("#filtroInput").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#tbodyTransacao tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });


        $("#dtInicio").val("2020-01-01");

        var dt = new Date();
        dt = new Date(dt.getFullYear(), dt.getMonth() + 1, 1);
        dt = new Date(dt - 1)
        $("#dtFim").val(dt.getFullYear() + "-" + String(dt.getMonth() + 1).padStart(2, '0') + "-" + String(dt.getDate()).padStart(2, '0'));
    });

    function ColocarInicioMes() {
        if ($("#hdDtI").val() == 0) {
            $("#hdDtI").val("1");
            var dt = new Date();
            $("#dtInicio").val(dt.getFullYear() + "-" + String(dt.getMonth() + 1).padStart(2, '0') + "-" + String("01"));
        }
        else {
            $("#hdDtI").val("0");
            $("#dtInicio").val("2020-01-01");
        }
    }
    function ColocarFinalMes() {
        var dt = new Date();
        if ($("#hdDtF").val() == 1) {
            $("#hdDtF").val("0");
            dt = new Date(dt.getFullYear(), dt.getMonth() + 1, 1);
            dt = new Date(dt - 1)
            $("#dtFim").val(dt.getFullYear() + "-" + String(dt.getMonth() + 1).padStart(2, '0') + "-" + String(dt.getDate()).padStart(2, '0'));
        }
        else {
            $("#hdDtF").val("1");
            $("#dtFim").val(dt.getFullYear() + "-" + 12 + "-" + 31);
        }
    }

</script>
